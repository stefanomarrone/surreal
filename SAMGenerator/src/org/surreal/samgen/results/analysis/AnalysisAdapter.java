/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.surreal.samgen.results.analysis;

import java.util.*;
import org.surreal.samgen.results.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoctrResult(ANoctrResult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACtrResult(ACtrResult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABmcResult(ABmcResult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleTNoBmcIndexRow(ASimpleTNoBmcIndexRow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleTfrow(ASimpleTfrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleFfrow(ASimpleFfrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleFbrow(ASimpleFbrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleBody(ASimpleBody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConcatBody(AConcatBody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAHeaderStatebody(AHeaderStatebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAHeaderStateheader(AHeaderStateheader node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleSteps(ASimpleSteps node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConcatSteps(AConcatSteps node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEventStep(AEventStep node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIndexStep(AIndexStep node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumValue(ANumValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStrValue(AStrValue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdLabel(AIdLabel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdGlobalname(AIdGlobalname node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdProcess(AIdProcess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdIndex(AIdIndex node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumNrval(ANumNrval node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdCrval(AIdCrval node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumFid(ANumFid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumSid(ANumSid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdSrcmode(AIdSrcmode node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdTrgmode(AIdTrgmode node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumBound(ANumBound node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSpaces(TSpaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSpace(TSpace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolFalse(TBoolFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolTrue(TBoolTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokFrowLeft(TTokFrowLeft node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokFrowBmcLeft(TTokFrowBmcLeft node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokFrowMiddle(TTokFrowMiddle node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokFrowBmcMiddle(TTokFrowBmcMiddle node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokFrowRight(TTokFrowRight node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokSrow(TTokSrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokTrow(TTokTrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokBmcTrow(TTokBmcTrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokHrow(TTokHrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTkNoBound(TTkNoBound node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokStateLeft(TTokStateLeft node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTokStateRight(TTokStateRight node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpaqueexpr(TOpaqueexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
