/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.surreal.samgen.results.node;

import org.surreal.samgen.results.analysis.Analysis;

@SuppressWarnings("nls")
public final class ASimpleBody extends PBody
{
    private PStatebody _statebody_;

    public ASimpleBody()
    {
        // Constructor
    }

    public ASimpleBody(
        @SuppressWarnings("hiding") PStatebody _statebody_)
    {
        // Constructor
        setStatebody(_statebody_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleBody(
            cloneNode(this._statebody_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleBody(this);
    }

    public PStatebody getStatebody()
    {
        return this._statebody_;
    }

    public void setStatebody(PStatebody node)
    {
        if(this._statebody_ != null)
        {
            this._statebody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._statebody_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._statebody_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._statebody_ == child)
        {
            this._statebody_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._statebody_ == oldChild)
        {
            setStatebody((PStatebody) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
