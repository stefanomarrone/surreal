/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.surreal.samgen.results.node;

import org.surreal.samgen.results.analysis.Analysis;

@SuppressWarnings("nls")
public final class ASimpleTfrow extends PTfrow
{
    private TTokFrowLeft _tokFrowLeft_;
    private PSrcmode _srcmode_;
    private TTokFrowMiddle _tokFrowMiddle_;
    private PTrgmode _trgmode_;
    private TTokFrowRight _tokFrowRight_;
    private TBoolTrue _boolTrue_;

    public ASimpleTfrow()
    {
        // Constructor
    }

    public ASimpleTfrow(
        @SuppressWarnings("hiding") TTokFrowLeft _tokFrowLeft_,
        @SuppressWarnings("hiding") PSrcmode _srcmode_,
        @SuppressWarnings("hiding") TTokFrowMiddle _tokFrowMiddle_,
        @SuppressWarnings("hiding") PTrgmode _trgmode_,
        @SuppressWarnings("hiding") TTokFrowRight _tokFrowRight_,
        @SuppressWarnings("hiding") TBoolTrue _boolTrue_)
    {
        // Constructor
        setTokFrowLeft(_tokFrowLeft_);

        setSrcmode(_srcmode_);

        setTokFrowMiddle(_tokFrowMiddle_);

        setTrgmode(_trgmode_);

        setTokFrowRight(_tokFrowRight_);

        setBoolTrue(_boolTrue_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleTfrow(
            cloneNode(this._tokFrowLeft_),
            cloneNode(this._srcmode_),
            cloneNode(this._tokFrowMiddle_),
            cloneNode(this._trgmode_),
            cloneNode(this._tokFrowRight_),
            cloneNode(this._boolTrue_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleTfrow(this);
    }

    public TTokFrowLeft getTokFrowLeft()
    {
        return this._tokFrowLeft_;
    }

    public void setTokFrowLeft(TTokFrowLeft node)
    {
        if(this._tokFrowLeft_ != null)
        {
            this._tokFrowLeft_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tokFrowLeft_ = node;
    }

    public PSrcmode getSrcmode()
    {
        return this._srcmode_;
    }

    public void setSrcmode(PSrcmode node)
    {
        if(this._srcmode_ != null)
        {
            this._srcmode_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._srcmode_ = node;
    }

    public TTokFrowMiddle getTokFrowMiddle()
    {
        return this._tokFrowMiddle_;
    }

    public void setTokFrowMiddle(TTokFrowMiddle node)
    {
        if(this._tokFrowMiddle_ != null)
        {
            this._tokFrowMiddle_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tokFrowMiddle_ = node;
    }

    public PTrgmode getTrgmode()
    {
        return this._trgmode_;
    }

    public void setTrgmode(PTrgmode node)
    {
        if(this._trgmode_ != null)
        {
            this._trgmode_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._trgmode_ = node;
    }

    public TTokFrowRight getTokFrowRight()
    {
        return this._tokFrowRight_;
    }

    public void setTokFrowRight(TTokFrowRight node)
    {
        if(this._tokFrowRight_ != null)
        {
            this._tokFrowRight_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tokFrowRight_ = node;
    }

    public TBoolTrue getBoolTrue()
    {
        return this._boolTrue_;
    }

    public void setBoolTrue(TBoolTrue node)
    {
        if(this._boolTrue_ != null)
        {
            this._boolTrue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._boolTrue_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tokFrowLeft_)
            + toString(this._srcmode_)
            + toString(this._tokFrowMiddle_)
            + toString(this._trgmode_)
            + toString(this._tokFrowRight_)
            + toString(this._boolTrue_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tokFrowLeft_ == child)
        {
            this._tokFrowLeft_ = null;
            return;
        }

        if(this._srcmode_ == child)
        {
            this._srcmode_ = null;
            return;
        }

        if(this._tokFrowMiddle_ == child)
        {
            this._tokFrowMiddle_ = null;
            return;
        }

        if(this._trgmode_ == child)
        {
            this._trgmode_ = null;
            return;
        }

        if(this._tokFrowRight_ == child)
        {
            this._tokFrowRight_ = null;
            return;
        }

        if(this._boolTrue_ == child)
        {
            this._boolTrue_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tokFrowLeft_ == oldChild)
        {
            setTokFrowLeft((TTokFrowLeft) newChild);
            return;
        }

        if(this._srcmode_ == oldChild)
        {
            setSrcmode((PSrcmode) newChild);
            return;
        }

        if(this._tokFrowMiddle_ == oldChild)
        {
            setTokFrowMiddle((TTokFrowMiddle) newChild);
            return;
        }

        if(this._trgmode_ == oldChild)
        {
            setTrgmode((PTrgmode) newChild);
            return;
        }

        if(this._tokFrowRight_ == oldChild)
        {
            setTokFrowRight((TTokFrowRight) newChild);
            return;
        }

        if(this._boolTrue_ == oldChild)
        {
            setBoolTrue((TBoolTrue) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
